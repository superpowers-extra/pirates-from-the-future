#define PHONG
varying vec3 vViewPosition;
#ifndef FLAT_SHADED
varying vec3 vNormal;
#endif

THREE_ShaderChunk(common)
THREE_ShaderChunk(lights_phong_pars_vertex)
THREE_ShaderChunk(shadowmap_pars_vertex)

varying vec2 vUv;

void main() {
  THREE_ShaderChunk(defaultnormal_vertex)
  #ifndef FLAT_SHADED // Normal computed with derivatives when FLAT_SHADED
  vNormal = normalize( transformedNormal );
  #endif
  
  THREE_ShaderChunk(default_vertex)
  vViewPosition = -mvPosition.xyz;
  THREE_ShaderChunk(worldpos_vertex)
  THREE_ShaderChunk(lights_phong_vertex)
  THREE_ShaderChunk(shadowmap_vertex)
  
  vUv = uv;
  gl_Position = projectionMatrix * modelViewMatrix * vec4(position,1.0);
}
